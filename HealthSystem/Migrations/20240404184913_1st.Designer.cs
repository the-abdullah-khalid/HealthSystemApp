// <auto-generated />
using System;
using HealthSystemApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HealthSystemApp.Migrations
{
    [DbContext(typeof(HealthSystemDbContext))]
    [Migration("20240404184913_1st")]
    partial class _1st
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("healthDB")
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HealthSystemApp.Models.Domain.HealthRegion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("healthRegions", "healthDB");
                });

            modelBuilder.Entity("HealthSystemApp.Models.Domain.HealthRegionOrganization", b =>
                {
                    b.Property<Guid>("HealthRegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("HealthRegionId", "OrganizationId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("healthRegionOrganizations", "healthDB");
                });

            modelBuilder.Entity("HealthSystemApp.Models.Domain.HealthSystem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("healthSystems", "healthDB");
                });

            modelBuilder.Entity("HealthSystemApp.Models.Domain.HealthSystemHealthRegion", b =>
                {
                    b.Property<Guid>("HealthRegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HealthSystemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("HealthRegionId", "HealthSystemId");

                    b.HasIndex("HealthSystemId");

                    b.ToTable("healthSystemHealthRegions", "healthDB");
                });

            modelBuilder.Entity("HealthSystemApp.Models.Domain.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("organizations", "healthDB");
                });

            modelBuilder.Entity("HealthSystemApp.Models.Domain.HealthRegionOrganization", b =>
                {
                    b.HasOne("HealthSystemApp.Models.Domain.HealthRegion", "HealthRegion")
                        .WithMany("HealthRegionOrganizations")
                        .HasForeignKey("HealthRegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HealthSystemApp.Models.Domain.Organization", "Organization")
                        .WithMany("HealthRegionOrganizations")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HealthRegion");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("HealthSystemApp.Models.Domain.HealthSystemHealthRegion", b =>
                {
                    b.HasOne("HealthSystemApp.Models.Domain.HealthRegion", "HealthRegion")
                        .WithMany("HealthSystemHealthRegions")
                        .HasForeignKey("HealthRegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HealthSystemApp.Models.Domain.HealthSystem", "HealthSystem")
                        .WithMany("HealthSystemHealthRegions")
                        .HasForeignKey("HealthSystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HealthRegion");

                    b.Navigation("HealthSystem");
                });

            modelBuilder.Entity("HealthSystemApp.Models.Domain.HealthRegion", b =>
                {
                    b.Navigation("HealthRegionOrganizations");

                    b.Navigation("HealthSystemHealthRegions");
                });

            modelBuilder.Entity("HealthSystemApp.Models.Domain.HealthSystem", b =>
                {
                    b.Navigation("HealthSystemHealthRegions");
                });

            modelBuilder.Entity("HealthSystemApp.Models.Domain.Organization", b =>
                {
                    b.Navigation("HealthRegionOrganizations");
                });
#pragma warning restore 612, 618
        }
    }
}
